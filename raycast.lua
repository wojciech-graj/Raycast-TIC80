-- title:  Raycast FPS
-- author: Wojciech Graj
-- desc:   Raycast test
-- script: lua
-- input: gamepad

Player = {
	pos_x = 0,
	pos_y = 0,
	dir_x = -1,
	dir_y = 0,
	plane_x = 0,
	plane_y = 0.66,
}
Player.__index = Player

function Player.new(pos_x, pos_y)
	local self = setmetatable({}, Player)
	self.pos_x = pos_x
	self.pos_y = pos_y
	return self
end

function Player:physics_process(delta)
	if btn(2) then
		self:rotate(delta)
	elseif btn(3) then
		self:rotate(-delta)
	end
	if btn(0) then
		self:move(delta)
	elseif btn(1) then
		self:move(-delta)
	end
end

function Player:rotate(delta)
	local speed = 0.001 * delta --[CONST]
	local old_dir_x = self.dir_x
	self.dir_x = self.dir_x * math.cos(speed) - self.dir_y * math.sin(speed)
	self.dir_y = old_dir_x * math.sin(speed) + self.dir_y * math.cos(speed)
	local old_plane_x = self.plane_x
	self.plane_x = self.plane_x * math.cos(speed) - self.plane_y * math.sin(speed)
	self.plane_y = old_plane_x * math.sin(speed) + self.plane_y * math.cos(speed)
end

function Player:move(delta)
	local speed = 0.003 * delta --[CONST]
	if mget(math.floor(self.pos_x + self.dir_x * speed), math.floor(self.pos_y)) == 0 then
		self.pos_x = self.pos_x + self.dir_x * speed
	end
	if mget(math.floor(self.pos_x), math.floor(self.pos_y + self.dir_y * speed)) == 0 then
		self.pos_y = self.pos_y + self.dir_y * speed
	end
end

Sprite = {
	pos_x = 0,
	pos_y = 0,
	tex = 0,
	u_div = 1,
	v_div = 1,
	v_move = 0,
	screen_v_move = 0,
	dist = 0,
	rel_x = 0,
	rel_y = 0,
	inv_det = 0,
	trans_x = 0,
	trans_y = 0,
	screen_x = 0,
	screen_width = 0,
	screen_height = 0,
	draw_start_y = 0,
	draw_end_y = 0,
	draw_start_x = 0,
	draw_end_x = 0,
}
Sprite.__index = Sprite

function Sprite.new(pos_x, pos_y, tex, u_div, v_div, v_move)
	local self = setmetatable({}, Sprite)
	self.pos_x = pos_x
	self.pos_y = pos_y
	self.tex = tex
	self.u_div = u_div
	self.v_div = v_div
	self.v_move = v_move
	return self
end

function Sprite:calculate(inv_det)
	local screen_width = g_SCREEN_WIDTH
	local screen_height = g_SCREEN_HEIGHT
	local screen_half_height = screen_height / 2
	local player = g_player

	self.rel_x = self.pos_x - player.pos_x
	self.rel_y = self.pos_y - player.pos_y
	self.dist = math.sqrt(self.rel_x * self.rel_x + self.rel_y * self.rel_y)
	self.trans_y = inv_det * (player.plane_x * self.rel_y - player.plane_y * self.rel_x)
	if self.trans_y <= 0 then
		self.dist = -self.dist
		return
	end
	self.trans_x = inv_det * (player.dir_y * self.rel_x - player.dir_x * self.rel_y)
	self.screen_x = math.floor((screen_width * 0.5) * (1 + self.trans_x / self.trans_y))
	self.screen_width = math.abs(screen_height // self.trans_y) // self.u_div
	self.draw_start_x = self.screen_x - self.screen_width // 2
	if self.draw_start_x < 0 then
		self.draw_start_x = 0
	elseif self.draw_start_x >= screen_width then
		self.dist = -self.dist
		return
	end
	self.draw_end_x = self.screen_x + self.screen_width // 2
	if self.draw_end_x >= screen_width then
		self.draw_end_x = screen_width - 1
	elseif self.draw_end_x < 0 then
		self.dist = -self.dist
		return
	end
	self.screen_height = math.abs(screen_height // self.trans_y) // self.v_div
	self.screen_v_move = self.v_move // self.trans_y
	self.draw_start_y = screen_half_height - self.screen_height // 2 + self.screen_v_move
	if self.draw_start_y < 0 then
		self.draw_start_y = 0
	end
	self.draw_end_y = screen_half_height + self.screen_height // 2 + self.screen_v_move
	if self.draw_end_y >= screen_height then
		self.draw_end_y = screen_height - 1
	end
end

function get_tex_pixel(offset, id, x, y)
	return peek4(offset + 0x40 * (id + 16 * (y // 8) + x // 8) + 0x8 * (y % 8) + (x % 8))
end

function init()
	g_SCREEN_WIDTH = 240
	g_SCREEN_HEIGHT = 136
	g_FPS_COUNTER = true
	g_TEX_WIDTH = 32
	g_TEX_HEIGHT = 32
	g_SPRITE_SIZES = {
		[0]={16,16}
	}
	g_player = Player.new(22, 12)
	g_prev_time = 0
	g_sprites = {
		Sprite.new(12, 13, 0, 2, 2, 36),
		Sprite.new(15, 16, 0, 2, 2, 36),
	}
end

init()
function TIC()
	local t = time()
	local delta = t - g_prev_time --msec
	g_prev_time = t

	local screen_width = g_SCREEN_WIDTH
	local screen_height = g_SCREEN_HEIGHT
	local screen_half_height = screen_height / 2
	local tex_width = g_TEX_WIDTH
	local tex_height = g_TEX_HEIGHT
	local sprite_sizes = g_SPRITE_SIZES
	local player = g_player
	local sprites = g_sprites

	player:physics_process(delta)

	-- draw
	cls(0)

	local inv_det = 1 / (player.plane_x * player.dir_y - player.dir_x * player.plane_y)
	local visible_sprites = {}
	for key,sprite in pairs(sprites) do
		sprite:calculate(inv_det)
		if sprite.dist > 0 then
			visible_sprites[#visible_sprites+1] = sprite
		end
	end

	table.sort(visible_sprites, function(a,b) return a.dist < b.dist end)

	-- walls
	for x=0,screen_width do
		local camera_x = 2 * x / screen_width - 1
		local ray_dir_x = player.dir_x + player.plane_x * camera_x
		local ray_dir_y = player.dir_y + player.plane_y * camera_x
		local map_x = math.floor(player.pos_x)
		local map_y = math.floor(player.pos_y)
		local delta_dist_x = math.abs(1 / ray_dir_x)
		local delta_dist_y = math.abs(1 / ray_dir_y)

		local step_x
		local side_dist_x
		if ray_dir_x < 0 then
			step_x = -1
			side_dist_x = (player.pos_x - map_x) * delta_dist_x
		else
			step_x = 1
			side_dist_x = (map_x + 1.0 - player.pos_x) * delta_dist_x
		end

		local step_y
		local side_dist_y
		if ray_dir_y < 0 then
			step_y = -1
			side_dist_y = (player.pos_y - map_y) * delta_dist_y
		else
			step_y = 1
			side_dist_y = (map_y + 1.0 - player.pos_y) * delta_dist_y
		end

		local side
		local not_hit = true
		while not_hit do
			if side_dist_x < side_dist_y then
				side_dist_x = side_dist_x + delta_dist_x
				map_x = map_x + step_x
				side = 0
			else
				side_dist_y = side_dist_y + delta_dist_y
				map_y = map_y + step_y
				side = 1
			end
			if mget(map_x, map_y) > 0 then
				not_hit = false
			end
		end

		local perp_wall_dist
		if side == 0 then
			perp_wall_dist = (map_x - player.pos_x + (1 - step_x) * 0.5) / ray_dir_x
		else
			perp_wall_dist = (map_y - player.pos_y + (1 - step_y) * 0.5) / ray_dir_y
		end

		local line_height = 136 // perp_wall_dist
		local draw_start = screen_half_height - line_height // 2
		if draw_start < 0 then
			draw_start = 0
		end
		local draw_end = line_height // 2 + screen_half_height
		if draw_end >= screen_height then
			draw_end = screen_height - 1
		end

		local wall_x
		if side == 0 then
			wall_x = player.pos_y + perp_wall_dist * ray_dir_y
		else
			wall_x = player.pos_x + perp_wall_dist * ray_dir_x
		end
		wall_x = wall_x - math.floor(wall_x)

		local tex_id = mget(map_x, map_y)
		local tex_x = math.floor(wall_x * tex_width)

		local step = tex_height / line_height
		local tex_start = (draw_start - screen_half_height + line_height * 0.5) * step

		--TODO:optimization

		for key,sprite in ipairs(visible_sprites) do
			if sprite.dist >= perp_wall_dist then
				break
			end
			if x >= sprite.draw_start_x and x <= sprite.draw_end_x then
				local a = sprite_sizes[sprite.tex][2] / sprite.screen_height
				local sprite_tex_x = math.floor((x - (sprite.screen_x - sprite.screen_width / 2)) * sprite_sizes[sprite.tex][1] / sprite.screen_width)
				for y=sprite.draw_start_y,sprite.draw_end_y do
					local tex_y = math.floor((y - sprite.screen_v_move - screen_half_height + sprite.screen_height / 2) * a)
					local color = get_tex_pixel(0xC000, sprite.tex, sprite_tex_x, tex_y)
					if color > 0 and pix(x, y) == 0 then
						pix(x, y, color)
					end
				end
			end
		end

		for y=draw_start,draw_end do
			if pix(x, y) == 0 then
				local tex_y = math.floor(tex_start + step * (y - draw_start)) % tex_height
				pix(x, y, get_tex_pixel(0x8000, tex_id, tex_x, tex_y))
			end
		end
	end

	--floor + ceiling
	local ray_dir_x0 = player.dir_x - player.plane_x
	local ray_dir_y0 = player.dir_y - player.plane_y
	local ray_dir_x1 = player.dir_x + player.plane_x
	local ray_dir_y1 = player.dir_y + player.plane_y
	for y=screen_half_height,screen_height do
		local pos_z = screen_half_height
		local p = y - pos_z
		local row_distance = pos_z / p
		local floor_step_x = row_distance * (ray_dir_x1 - ray_dir_x0) / screen_width
		local floor_step_y = row_distance * (ray_dir_y1 - ray_dir_y0) / screen_width
		local floor_x = player.pos_x + row_distance * ray_dir_x0
		local floor_y = player.pos_y + row_distance * ray_dir_y0
		for x=0,screen_width do
			local cell_x = math.floor(floor_x)
			local cell_y = math.floor(floor_y)

			local tx = math.floor(tex_width * (floor_x - cell_x)) % tex_width
			local ty = math.floor(tex_height * (floor_y - cell_y)) % tex_height

			if pix(x, y) == 0 then
				pix(x, y, get_tex_pixel(0x8000, 5, tx, ty)) --[CONST]
			end
			if pix(x, screen_height - y - 1) == 0 then
				pix(x, screen_height - y - 1, get_tex_pixel(0x8000, 9, tx, ty)) --[CONST]
			end

			floor_x = floor_x + floor_step_x
			floor_y = floor_y + floor_step_y
		end
	end

	if g_FPS_COUNTER then
		print(math.floor(1000 / delta), 0, 0, 5)
	end
end

-- <TILES>
-- 001:ffffffffd56555d5d567777ed566766e666677ee6e667eeedeee7eeedeeeeeee
-- 002:ffffffff5555dddfeeee6eefeee56eef555667ef556667ef666767efee6e77ef
-- 003:ffffffffddddd5dddeeee557dee6e766dee6eee7de76ee7ede777ee7de7e7ee7
-- 004:ffffffff5ddddddfeeeeeeef6eeeeeef6e66e7ef567666ef6577677f7776777f
-- 005:443333ee333333e4eeeeeee4444444ee4444444e44c444444ccc444444ccc444
-- 006:ee3ee4444eee44c44444ccc4444ccc44e4444444eee4444344ee4433444eeeee
-- 007:4444ee444433e4444433e44c4433e4cc433ee4cc333e444433e44444eeeeee44
-- 008:4444eee3444444eec4444444c44444434444444344444433444433334443333e
-- 009:ffffffffffffffffffffffddffffddddfffddddffffddfffffdddfffffddffff
-- 010:ffffdddddddddddddddddfffffffffffffffffffffffffffffffffffffffffff
-- 011:ddddffffddddddddfffdddddffffffffffffffffffffffffffffffffffffffff
-- 012:ffffffffffffffffddffffffddddfffffddddffffffddffffffdddffffffddff
-- 017:ffffffff567665dfe777e6efe76756efe76777efeee767efeeee67efeeee7eef
-- 018:ffffffffd5555d55dee6657edeee65e7deee6675deeeee55deeee776deeeee76
-- 019:ffffffff55d5dddfeeeeeeef7eeeee6f6ee7ee6f67e7e67f6677e77f776ee77f
-- 020:ffffffffdd555d5dde56e6eede66e6eedee6eeeed66777eed766557ed777777e
-- 021:4444c44444444444e4444444ee4444334ee4433333eeee333ee44eeeee44444e
-- 022:444ee444433ee4443333e444333ee44c33ee444c3ee444ccee444444eee44444
-- 023:44444eee4444444444444444c4444444c4444444444444434444443344444333
-- 024:e433333eeee333e43eeeee443e4444443e444444e444cc44e44ccc44e44cc444
-- 025:fddffffffddffffffddffffffddfffffdddfffffddffffffddffffffddffffff
-- 026:ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
-- 027:ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
-- 028:fffffddffffffddffffffddffffffddffffffdddffffffddffffffddffffffdd
-- 033:ffffffffddd5565dd65565ee66566eeed6667ee6d6777eeed67776eede7777ee
-- 034:ffffffffd5655ddf7667eeef7677eeefe7767eefee76677feee7767feeee777f
-- 035:ffffffffd5d555dddeeee557deeee776de5ee676d6655ee7d6777eeede77eeee
-- 036:ffffffff56655ddf65eeeeef76eeeeef7e66eeef667eeeef7767eeef77eeeeef
-- 037:e44cc444e44c4444ee4444443e4444433ee444333eeee333e4444eee44444444
-- 038:43ee444433e4e44433e4e44433e4eee4ee4444eee4444444e444c444e4cc4444
-- 039:4444333e444333ee43333eee33eee444eee44444e4444444e4444444e444cc44
-- 040:e444444444444443e4444443ee4444334e44433344e4333e444eeee4444443e4
-- 041:ddffffffddffffffddffffffdddffffffddffffffddffffffddffffffddfffff
-- 042:ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
-- 043:ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
-- 044:ffffffddffffffddffffffddfffffdddfffffddffffffddffffffddffffffddf
-- 049:ffffffff65d55ddfe656eeefee765eefe76557ef5566777f56777e7fe777eeef
-- 050:ffffffffd5767755dee66eeedee767eedee77eeedee677eedee667eedee777ee
-- 051:ffffffff65655ddf55667eef65675eefe76676efe776776feeeee77feeeee77f
-- 052:ffffffffdd55555dde5577eedee656eede6767e7de67777edee67eeedee77777
-- 053:444444444ccc44444ccc444444c44443444443334444433e4443333e443333e4
-- 054:e4c444444ecc44433e4444333e444433ee44433ee444333e444433e444433ee4
-- 055:e44ccc44e44cc444e4444444e44444444ee4444444ee44444443e4444443e433
-- 056:444443e4444443e4444443e4444433e4443333e4433eee4433ee444433e44444
-- 057:ffddffffffdddffffffddffffffddddfffffddddffffffddffffffffffffffff
-- 058:ffffffffffffffffffffffffffffffffffffffffdddddfffddddddddffffdddd
-- 059:fffffffffffffffffffffffffffffffffffffffffffdddddddddddddddddffff
-- 060:ffffddfffffdddfffffddffffddddfffddddffffddffffffffffffffffffffff
-- </TILES>

-- <SPRITES>
-- 000:0000eeee00ff22220f222c2202ff22220222eeee0f2222220ff2222202ffeeee
-- 001:eeee00002222dd00222222d02222dd20eeee2220222222d022222dd0eeeedd20
-- 016:022feeee0f2222220ff2222202ffeeee022feeee0f22222200ff22220000eeee
-- 017:eeeed220222222d022222dd0eeeedd20eeeed220222222d02222dd00eeee0000
-- </SPRITES>

-- <MAP>
-- 000:101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 001:100000000000000000000000000000001010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 002:100000000000000000000000000000001000000000001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 003:100000000000000000000000000000001010001010001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 004:100000000000000000000000000000001000000010001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 005:100000000000000000000000000000001000000010001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 006:100000001010101010000000000000001000100010001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 007:100000001000000010000000000000001000000010001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 008:100000001000000010000000000000001010101010001010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 009:100000001000000010000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 010:100000001010101010000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 011:100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 012:100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 013:100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 014:100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 015:100000001000100010000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 016:100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 017:100000001000100010000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 018:100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 019:100000001000100010000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 020:100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 021:100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 022:100000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- 023:101010101010101010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
-- </MAP>

-- <PALETTE>
-- 000:1a1c2c5d275db13e53ef7d57ffcd75a7f07038b76425717929366f3b5dc941a6f673eff7f4f4f494b0c2566c86333c57
-- </PALETTE>
